=====================================================================================
=> Write contrustor, move constructor, destructor, assignment, move assignment, copy constructor 
class A
{
	int a{10};
	char * ptr;
};

=> Is there a problem here? 
std::vector<BigObject> v(10);
for (auto elem : v) 
{
}

=> Is there a problem here?
	my_struct_t *bar;
	memset(bar, 0, sizeof(bar));

=> Value of i and j after execution? 
   int i = 5;
   int j = i++;

=> What is the output of following code? 

#include <iostream>

class Base {
	virtual void method() {
		std::cout << "from Base" << std::endl;
	}
	public:
	virtual ~Base() {
		std::cout << " Base descturor " << std::endl; 
		method();
	}
	void baseMethod() { method(); }
};

class Derived : public Base {
	void method() {
		std::cout << "from Derived" << std::endl;
	}
	public:
	~Derived() {
		std::cout << " Derived destructor " << std::endl; 
		method();
	}
};

int main(void) {
	Base* base = new Derived;
	base->baseMethod();
	delete base;
	return 0;
}

=> Is there a problem with following code?
class A
{
	public:
		A() {}
		~A(){}
};

class B: public A
{
	public:
		B():A(){}
		(){}
};

int main(void)
{
	A* a = new B();
	delete a;
}

=> What is the output here?

struct Fred {
	Fred(int n): v(n) {}
	std::vector<int> v;
};

int main() {
	using namespace std;
	Fred f(1);
	f.v[0] = 5;
	cout << f.v[0] << endl;
	f = 7;          // is this legal?
	cout << f.v[0]; // what is output here?
}

=> How can we sort vector and list? 

=> What does move constructor does? Write move constructor for a class. 

=> How do you know cache sizes on Linux? 

=> How do you know if UDP layer is dropping packets and how can you solve it? 

=> Best way to remove one element in vector. 

=> Find 10th greatest element in 1 million elements. 

=> Implement a method which returns two if two types passed to that method is same? 
    Do you know if there are traits like that in C++?


GENERIC:
=======
=> Discuss some problems faced during developing system you developed?

OPERATING SYSTEM:
================
=> How do you know cache sizes on Linux? 
=> How do you TCP/UDP buffer sizes? 
=> How do you know if UDP layer is dropping packets and how can you solve it? 

TOOLS:
=====
-> Sites that usually refer to for learning, development, keeping up to date with C++.
-> Static analyzer usage.
-> How do you investigate memory leak? 
-> Evironment setup for development.
-> How do you debug running applications? 
   How do you know what libraries are loaded in gdb? 
   How do you know how many threads are in process in gdb? 


=============== LAST IF TIME REMAININAG ===================
/**
 Find Kth index element in given array after sorting
 */

#pragma once
#include <cstddef>
#include <utility>
#include <vector>
#include <algorithm>
#include <iostream>

// Assumption: 
// Indexing is always based on zero. 
// Doing inplace sorting of an array. So, original array will change.
 
template <typename ContainerType>
size_t partition_array (ContainerType& arr, size_t startIndex, size_t endIndex)
{
	// Fill in code here
	return 0;
}

// int kth_element (int arr[], int startIndex, int endIndex, const int& kthIndex)
template <typename ContainerType>
int kth_element (ContainerType& arr, size_t size, size_t startIndex, size_t endIndex, const size_t& kthIndex)
{
	// Fill in code here
	return 0;
}

int main() {
	std::vector<int> v{5, 10, 3, 13, 1, 2, 18, 6};
	// sorted {1, 2, 3, 5, 6, 10, 13, 18};
	std::cout << kth_element(v, v.size(), 0, v.size()-1, 0) << std::endl;
}

===================================================================================

6) Fibionacci series. When is it possible to calculate in compile time and how? 

13) How do you call particular template method of only certain type?

template <typename T> 
void foo() 
{
	std::cout << " foo called " << std::endl;
}

14)  Implement is same class type - is same type returns true else false. 
std::is_same<T,T> return true or false.

/**
 Implement method to return true if two types passed is same. 
 */

https://www.toptal.com/c-plus-plus/interview-questions
https://tests4geeks.com/blog/cpp-interview-questions/


