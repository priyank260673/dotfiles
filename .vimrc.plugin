""""""" You complete me """" 
let g:ycm_global_ycm_extra_conf='~/global_extra_conf.py'
let g:ycm_collect_identifiers_from_tags_files=1
let g:ycm_error_symbol='>'
let g:ycm_warning_symbol='>'
let g:ycm_max_diagnostics_to_display = 1000
let g:ycm_confirm_extra_conf=0
let g:ycm_disable_for_files_larger_than_kb=10000
set completefunc=youcompleteme#OmniComplete
set omnifunc=youcompleteme#OmniComplete
map <Leader>f :YcmCompleter GoTo<CR>
map <Leader>ff :YcmCompleter FixIt<CR>
let g:ycm_filetype_blacklist = {
			\ 'tagbar': 1,
			\ 'qf': 1,
			\ 'notes': 1,
			\ 'markdown': 1,
			\ 'unite': 1,
			\ 'text': 1,
			\ 'vimwiki': 1,
			\ 'pandoc': 1,
			\ 'infolog': 1,
			\ 'mail': 1 }
au BufRead,BufNewFile *.ipp set filetype=cpp

""""""""""""""""""""""""  GutenTags """""""""""""""""""""
" mkdir ~/git/example/sapphire/.root, used below
let g:gutentags_ctags_extra_args=['-R', '--totals', '--recurse', '--c++-kinds=+p', '--fields=+ialS', '--extras=+qf', '--language-force=C++']
let g:gutentags_define_advanced_commands = 1
let g:gutentags_cache_dir='~/tags/'
let g:gutentags_ctags_tagfile='~/tags/allTags'
let g:gutentags_resolve_symlinks=1
if (laptop_mode)
	set tags+=~/tags/allTags,~/tags/Users-ppatel-GUTENTAGS-~-tags-allTags
	let g:gutentags_ctags_executable='/usr/local/Cellar/universal-ctags/HEAD-5b42263/bin/ctags'
else
	set tags+=~/tags/allTags,~/tags/home-ppatel-git-example-sapphire-~-tags-allTags
	let g:gutentags_ctags_executable='/home/ppatel/bin/CTAGS/LATEST/ctags/ctags'
endif
let g:gutentags_auto_add_cscope=1
let g:gutentags_project_root = ['.root']
let g:gutentags_add_default_project_roots=0
let g:gutentags_exclude_filetypes = ['text', 'help', 'vim']
let g:gutentags_plus_switch = 1

"""""""""""" TAG BAR  """""""""""""""""""""""""""
let g:tagbar_left = 0
let g:tagbar_autofocus = 1
let g:tagbar_width = 55

"""""""""""" ASYNCRUN  """""""""""""""""""""""""""
let g:asyncrun_open = 8
let g:asyncrun_save = 2
let g:asyncrun_bell = 1
" Highlight of AsyncRun exit messages
hi AsyncRunFail ctermfg=124 guifg=#942f1f
hi AsyncRunOK ctermfg=LightGreen guifg=#558C00
" Do not silent AsyncRunEvents
let g:asyncrun_silent = 0
" Echo exit status of AsyncRun command
autocmd User AsyncRunStop if g:asyncrun_code != 0 | echohl AsyncRunFail |
			\ echo 'AsyncRun: [FAIL]' |  
			\ else | echohl AsyncRunOK |
			\ echo 'AsyncRun: [OK]' | cclose | endif | echohl Normal

""""""""""""  Ultisnips  """""""""""""""""""""
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<c-l>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:UltiSnipsListSnippets="<c-a>"
let g:UltiSnipsEditSplit="vertical"

""""""""""""""ConqueTerm GDB settings """""""""""""""""""""""""""
let g:ConqueTerm_Color = 2         " 1: strip color after 200 lines, 2: always with color
let g:ConqueTerm_CloseOnEnd = 1    " close conque when program ends running
let g:ConqueTerm_StartMessages = 0 " display warning messages if conqueTerm is configured incorrectly 
let g:ConqueGdb_SaveHistory = 1

""""""""""""  a.vim """""""""""""""""""""
nmap <C-i> :A <cr>
nmap <C-]> :exe ":tj /" . expand("<cword>")<CR>
nmap <C-c> :qa <cr>

""""""""""""  fzf """""""""""""""""""""
set rtp+=~/.vim/bundle/fzf/
nnoremap <C-p> :Files<Cr>

""" An action can be a reference to a function that processes selected lines
function! s:build_quickfix_list(lines)
  call setqflist(map(copy(a:lines), '{ "filename": v:val }'))
  copen
  cc
endfunction

let g:fzf_action = {
  \ 'ctrl-q': function('s:build_quickfix_list'),
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }

""" Default fzf layout
""" - down / up / left / right
let g:fzf_layout = { 'down': '~40%' }

""" You can set up fzf window using a Vim command (Neovim or latest Vim 8 required)
""let g:fzf_layout = { 'window': 'enew' }
""let g:fzf_layout = { 'window': '-tabnew' }
""let g:fzf_layout = { 'window': '10split enew' }
""
" Customize fzf colors to match your color scheme
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" Enable per-command history.
" CTRL-N and CTRL-P will be automatically bound to next-history and
" previous-history instead of down and up. If you don't like the change,
" explicitly bind the keys to down and up in your $FZF_DEFAULT_OPTS.
let g:fzf_history_dir = '~/.local/share/fzf-history'

"=============Unneeded plugin======================="
"""""""""""""" ALE  """""""""""""""""""""""""""
""let g:ale_linters = {'cpp' : ['gcc'], 'c' : ['gcc']}
""let g:ale_completion_enabled = 0
""let g:ale_enabled = 0
""let g:ale_lint_on_save = 1
""let g:ale_lint_on_text_changed = 1
""let g:ale_lint_on_enter = 1
""let g:ale_sign_error='XX'
""let g:ale_sign_warning='W'
""let g:ale_cursor_detail=0
""let g:ale_cache_executable_check_failures = 1
""let g:ale_lint_delay = 500
""hi ALEErrorSign ctermfg=red ctermbg=none
""hi ALEWarningSign ctermfg=yellow ctermbg=none
""let g:ale_c_parse_makefile=1
""let g:ale_c_build_dir='/home/ppatel/git/example/sapphire/build/debug/'
"""highlight link ALEErrorLine error
"""highlight link ALEWarningLine warning
""let g:ale_cpp_gcc_executable="/usr/bin/g++-7"
""let g:ale_cpp_gcc_options = '-isystem /usr/include/c++/7/ -isystem /usr/include -isystem /usr/local/include/ -I/home/ppatel/git/example/sapphire/e7core/ -I/home/ppatel/git/example/sapphire/hawk/ -I/home/ppatel/git/example/sapphire/ -I/home/ppatel/git/example/sapphire/sapphire/ -I/home/ppatel/git/example/sapphire/apps/create_sections/ -I/home/ppatel/git/example/sapphire/apps/log_reader/ -I/home/ppatel/git/example/sapphire/messages/generated/ -I/home/ppatel/git/example/sapphire/messages/generated/Example/ -I/home/ppatel/git/example/sapphire/messages/generated/feeder/ -I/home/ppatel/git/example/sapphire/messages/generated/pricefeeders/ -I/home/ppatel/git/example/sapphire/messages/generated/Sapphire/ -I/home/ppatel/git/example/sapphire/sapphire/ -I/home/ppatel/git/example/sapphire/sapphire/gateways/pricefeed/lib/ -I/home/ppatel/git/example/sapphire/sapphire/nodes/ -I/home/ppatel/git/example/sapphire/sapphire/p2p/ -I/home/ppatel/git/example/sapphire/sapphire/sapphirelibs/ -I/include/ -I/opt/eagleseven/straits/include/ -isystem /usr/local/share/drop/Concord.Risk-1.7/Concord.Risk-1.7.44/ -isystem /usr/local/share/drop/Concord.Storage-1.4/Concord.Storage-1.4.23/ -isystem /usr/local/share/drop/Raptor.Api-3.3/Raptor.Api-3.3.21/ -I/usr/include/postgresql/ -I/usr/include/postgresql/9.5/server/ -I/usr/include/postgresql/9.5/server/ -I/usr/local/share/drop/ -I/usr/local/share/drop/cryptopp-5.6.5/include/ -I/usr/local/share/drop/cuda-9.2/include/ -I/usr/local/share/drop/gtest-1.8/include/ -I/usr/local/share/drop/jgate_omex-2018.05/include/ -I/usr/local/share/drop/Lime.Citrus-2.2/Lime.Citrus-2.2.9/ -I/usr/local/share/drop/openonload/openonload-201710-u1/include/ -I/usr/local/share/drop/taocpp/1.0.0-beta11/include/ -I/usr/local/share/drop/websocketpp/0.6.0.2/include/ -march=haswell -mtune=haswell -mno-avx -mno-avx2 -mpopcnt -msse4.2 -mabm -maes -mbmi -mbmi2 -mcx16 -mf16c -mfma -mfsgsbase -mfxsr -mlzcnt -mmmx -mmovbe -mpclmul -mrdrnd -msahf -mxsaveopt -std=c++17 -ggdb3 -pedantic -Wall -Werror -Wno-comment -Wno-invalid-offsetof -fno-omit-frame-pointer -fno-stack-protector --param=ssp-buffer-size=8 -fno-strict-aliasing -fpermissive -Wl,--copy-dt-needed-entries'
""let b:ale_cpp_gcc_options = g:ale_cpp_gcc_options
""au BufRead,BufNewFile *.ipp set filetype=cpp

" =========== OMNI COMPLETE FEATURES =================== "
" configure tags - add additional tags here or comment out not-used ones
" build tags of your own project with Ctrl-F12
"map <C-F12> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
"" OmniCppComplete
"PHP let OmniCpp_GlobalScopeSearch   = 1
"PHP let OmniCpp_NamespaceSearch = 1
"PHP let OmniCpp_ShowAccess          = 1 "show access in pop-up
"PHP let OmniCpp_DisplayMode         = 1
"PHP let OmniCpp_ShowScopeInAbbr     = 0 "do not show namespace in pop-up
"PHP let OmniCpp_ShowPrototypeInAbbr = 1 "show prototype in pop-up
"PHP let OmniCpp_SelectFirstItem     = 1 "select first item in pop-up
"PHP let OmniCpp_MayCompleteDot = 1 " autocomplete after .
"PHP let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
"PHP let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
"PHP let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD", "_GLIBCXX_STD_A", "_GLIBCXX_STD_C"]
"PHP au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
"PHP set completeopt=menuone,menu,longest,preview

"Bundle 'kshenoy/vim-signature'
"Bundle 'vim-scripts/OmniCppComplete'
"Bundle 'wincent/command-t'
"Bundle 'ervandew/supertab'
"Bundle 'vim-scripts/Conque-GDB'
"Bundle 'LucHermitte/lh-vim-lib'
"Bundle 'LucHermitte/lh-style'
"Bundle 'LucHermitte/lh-tags'
"Bundle 'LucHermitte/lh-dev'
"Bundle 'LucHermitte/lh-brackets'
"Bundle 'LucHermitte/searchInRuntime'
"Bundle 'LucHermitte/mu-template'
"Bundle 'tomtom/stakeholders_vim'
"Bundle 'LucHermitte/alternate-lite'
"Bundle 'LucHermitte/lh-cpp'
"Bundle 'ctrlp.vim'
"Bundle 'bronson/vim-trailing-whitespace'
"Bundle 'mxw/vim-jsx'
"Bundle 'kballard/vim-swift'
"Bundle 'plasticboy/vim-markdown'
"Bundle 'mustache/vim-mustache-handlebars'
"Bundle 'slim-template/vim-slim'
"Bundle 'puppetlabs/puppet-syntax-vim'
"Bundle 'elixir-lang/vim-elixir'
"Bundle 'briancollins/vim-jst'
"Bundle 'jszakmeister/vim-togglecursor'
"Bundle 'rking/ag.vim'
"Bundle 'Chun-Yang/vim-action-ag'
"Bundle 'jparise/vim-graphql'
"Bundle 'matchit.zip'
"Bundle 'vim-scripts/a.vim'
"Bundle 'richq/cmake-lint'
"Bundle 'mrtazz/checkmake'
"Bundle 'vim-scripts/taglist.vim'
"Bundle 'vim-syntastic/syntastic'
"Bundle 'rickhowe/diffchar.vim'
"Bundle 'mileszs/ack.vim'
